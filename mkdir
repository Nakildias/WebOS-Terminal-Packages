# author: nakildias
# version: 1.0.0
# requires_sudo: False
# size: 2KB
# release_date: 2024-06-25
# last_updated: 2024-06-25

import os
import json
import sys

def get_safe_path(req_path, user_home):
    bin_dir = os.path.dirname(os.path.abspath(__file__))
    FILESYSTEM_ROOT = os.path.abspath(os.path.join(bin_dir, '..'))
    safe_base = FILESYSTEM_ROOT
    full_path = os.path.abspath(os.path.join(safe_base, req_path.lstrip('/\\')))
    if not full_path.startswith(safe_base):
        return None
    return full_path

def main():
    context_str = os.environ.get('WEBOS_CONTEXT')
    if not context_str:
        print("Error: Script must be run within WebOS.", file=sys.stderr)
        sys.exit(1)

    context = json.loads(context_str)
    args = context.get('args', [])
    cwd = context.get('cwd', '/')
    user_home = os.path.join('/home', context['user']['username'])

    if not args:
        print("mkdir: missing operand", file=sys.stderr)
        sys.exit(1)

    target_dir = args[0]
    new_dir_path = os.path.join(cwd, target_dir)
    new_dir_server_path = get_safe_path(new_dir_path, user_home)

    if new_dir_server_path:
        try:
            os.makedirs(new_dir_server_path, exist_ok=True)
        except Exception as e:
            print(f"mkdir: cannot create directory '{target_dir}': {e}", file=sys.stderr)
            sys.exit(1)
    else:
        # This case might be hit if the path is outside the safe root
        print(f"mkdir: cannot create directory '{target_dir}': Permission denied", file=sys.stderr)
        sys.exit(1)


if __name__ == '__main__':
    main()
